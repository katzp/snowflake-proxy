package com.pkatz.snowflake.proxy.entity;


import com.amazonaws.services.dynamodbv2.datamodeling.*;

import java.util.Date;
import java.util.Optional;

@DynamoDBTable(tableName = "connections")
public class SnowflakeConnection {
    private String id;
    private String url;
    private String username;
    private String password;
    private String role;
    private Optional<String> warehouse;
    private Date createdAt;
    private Date updatedAt;

    public SnowflakeConnection(String id, String url, String username, String password, String role, Optional<String> warehouse, Date createdAt, Date updatedAt) {
        this.id = id;
        this.url = url;
        this.username = username;
        this.password = password;
        this.role = role;
        this.warehouse = warehouse;
        this.createdAt = createdAt;
        this.updatedAt = updatedAt;
    }

    public SnowflakeConnection() {
    }

    @DynamoDBHashKey
    @DynamoDBAutoGeneratedKey
    public String getId() {
        return id;
    }

    public void setId(String id) {
        this.id = id;
    }

    @DynamoDBAttribute
    public String getUrl() {
        return url;
    }

    public void setUrl(String url) {
        this.url = url;
    }

    @DynamoDBAttribute
    public String getUsername() {
        return username;
    }

    public void setUsername(String username) {
        this.username = username;
    }

    @DynamoDBAttribute
    public String getPassword() {
        return password;
    }

    public void setPassword(String password) {
        this.password = password;
    }

    @DynamoDBAttribute
    public String getRole() {
        return role;
    }

    public void setRole(String role) {
        this.role = role;
    }

    @DynamoDBAttribute
    @DynamoDBTyped(DynamoDBMapperFieldModel.DynamoDBAttributeType.S)
    public Optional<String> getWarehouse() {
        return warehouse;
    }

    public void setWarehouse(Optional<String> warehouse) {
        this.warehouse = warehouse;
    }

    @DynamoDBAttribute
    @DynamoDBAutoGeneratedTimestamp(strategy = DynamoDBAutoGenerateStrategy.CREATE)
    public Date getCreatedAt() {
        return createdAt;
    }

    public void setCreatedAt(Date createdAt) {
        this.createdAt = createdAt;
    }

    @DynamoDBAttribute
    @DynamoDBAutoGeneratedTimestamp(strategy = DynamoDBAutoGenerateStrategy.ALWAYS)
    public Date getUpdatedAt() {
        return updatedAt;
    }

    public void setUpdatedAt(Date updatedAt) {
        this.updatedAt = updatedAt;
    }
}
